message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('Co5_Dates.csv')
X1 = MD[order(MD$patient_id),]
#MD2 = read.csv('Co3_Dates_ii.csv')
#X2 =  MD2[order(MD2$patient_id),]
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Model_Past_Outcome = MD [ MD$model_date > MD$outcome_date ,]
MD_real = MD [ MD$model_date < MD$outcome_date ,]
View(MD_real)
View(Model_Past_Outcome)
MD$y = 1*(MD$outcome=="True")
auc(MD_real$y , MD_real$p6)
Past = MD[MD$d<0,]
P1 = MD[MD$d> -1, ]
auc(P1$y , P1$p6)
P1_6 = P1[P1$d<180,]
auc(P1_6$y , P1_6$p6)
View(P1_6)
auc(MD_real$y , MD_real$p6)
MD$y = 1*(MD$outcome=="True")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('Co5_Dates.csv')
#MD = read.csv('xCoh_Sen.csv')
MD$dx_date = NULL
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
ind_to_model = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Past = MD[MD$d_to_outcome<0,]
P1 = MD[MD$d_to_outcome> -1, ]
P1$outcome = ifelse(P1$outcome == 'True',1,0)
P1_6 = P1[P1$d_from_ind<360,]
G = P1[P1$d_from_ind>14,]
confusionMatrix(data = as.factor(G$p6>.5), reference = as.factor(G$outcome))
library("Metrics")
confusionMatrix(data = as.factor(G$p6>.5), reference = as.factor(G$outcome))
VTE = P1[P1$outcome ==1,]
P1_6 = P1[P1$d_from_ind<360,]
G = P1[P1$d_from_ind>14,]
confusionMatrix(data = as.factor(G$p6>.5), reference = as.factor(G$outcome))
VTE = P1[P1$outcome ==1,]
d_from_i_to_VTE =    as.Date(VTE$outcome_date) - as.Date( VTE$index_date)
VTE_Valid = VTE[VTE$d_to_outcome >13,]
Y = rbind(VTE_Valid,  P1[P1$outcome ==0,])
confusionMatrix(data = as.factor(1*(Y$p6>.2)),
reference = as.factor(Y$outcome))
library("Metrics")
library(pROC)
confusionMatrix(data = as.factor(1*(Y$p6>.2)),
reference = as.factor(Y$outcome))
auc(P1$y , P1$p6)
library(caret)
auc(P1$y , P1$p6)
confusionMatrix(data = as.factor(G$p6>.5), reference = as.factor(G$outcome))
Past = MD[MD$d_to_outcome<0,]
P1 = MD[MD$d_to_outcome> -1, ]
P1$outcome = ifelse(P1$outcome == 'True',1,0)
P1_6 = P1[P1$d_from_ind<360,]
G = P1[P1$d_from_ind>14,]
auc(G$p6, G$outcome)
auc(, G$outcome, G$p6)
auc( G$outcome, G$p6)
auc( P1_6$outcome, P1_6$p6)
auc( G$outcome, G$p6)
G1 = P1[P1$d_from_ind>14 & P1$d_from_ind<365,]
G = P1[P1$d_to_outcome>14,]
auc( G$outcome, G$p6)
G = P1[P1$d_to_outcome>14 &  P1$d_to_outcome<365,]
auc( G$outcome, G$p6)
View(G)
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('Co5_Dates.csv')
#MD = read.csv('xCoh_Sen.csv')
MD$dx_date = NULL
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
ind_to_model = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Past = MD[MD$d_to_outcome<0,]
P1 = MD[MD$d_to_outcome> -1, ]
P1$outcome = ifelse(P1$outcome == 'True',1,0)
P1_6 = P1[P1$d_from_ind<360,]
G = P1[P1$d_from_ind>14,]
G = P1[P1$d_to_outcome>14 &  P1$d_to_outcome<365,]
G1 = P1[P1$d_from_ind>14 & P1$d_from_ind<365,]
auc( P1_6$outcome, P1_6$p6)
auc( G$outcome, G$p6)
auc(P1$y , P1$p6)
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd("Y:/Fillmore_cancer/v4/data/vte_dp/global/phe/")
Ana = read.fst('analytic_final_2006-2022v2.fst')
### save out data for jen
setwd('G:/FillmoreCancerData/markhe/VTERisk - Copy/Notebooks/Find/')
All = read.csv('AllChars_DF.csv')
X = All[,1:8]
X$dx_date = NULL
setwd('Y:/Fillmore_Cancer/cat/Users/data/derived/vte_ml/vte_ml/data_for_ang/')
Y = select( Ana, PatientICN, DeathDate)
Z = left_Join(X,Y)
library(plyr)
library(dplyr)
Z = left_Join(X,Y)
Z = left_join(X,Y)
Y$patient_id = as.numeric(Y$PatientICN)
Z = left_join(X,Y)
View(Z)
View(Ana)
Z$PatientICN = NULL
write.csv(X, file='VTE_Death_Dates_for_Jen.csv')
write.csv(Z, file='VTE_Death_Dates_for_Jen.csv')
View(Z)
is.na(Z$DeathDate)
sum( !is.na(Z$DeathDate) )
mean( !is.na(Z$DeathDate) )
sum( !is.na(Z$DeathDate) [Z$outcome == "True"])
mean( !is.na(Z$DeathDate) [Z$outcome == "True"])
View(Z)
View(Z)
Z$DeathDate [is.na(Z$DeathDate) ] = "1000-01-01"
View(Z)
write.csv(Z, file='VTE_Death_Dates_for_Jen.csv')
setwd('G:/FillmoreCancerData/markhe/VTERisk - Copy/Notebooks/Find/')
write.csv(Z, file='VTE_Death_Dates_for_Jen.csv')
Z1 = Z[Z$outcome == "True",]
View(Z1)
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
X1 = MD[order(MD$patient_id),]
9972/4
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
View(MD)
X1$dx_date = NULL
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
MD$dx_date = NULL
View(MD)
Model_Past_Outcome = MD [ MD$model_date > MD$outcome_date ,]
MD_real = MD [ MD$model_date < MD$outcome_date ,]
MD$y = 1*(MD$outcome=="True")
auc(MD_real$y , MD_real$p6)
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Model_Past_Outcome = MD [ MD$model_date > MD$outcome_date ,]
MD_real = MD [ MD$model_date < MD$outcome_date ,]
MD$y = 1*(MD$outcome=="True")
auc(MD_real$y , MD_real$p6)
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
MD$dx_date = NULL
X1 = MD[order(MD$patient_id),]
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
View(MD)
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
MD$dx_date = NULL
X1 = MD[order(MD$patient_id),]
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
MD$dx_date = NULL
X1 = MD[order(MD$patient_id),]
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
MD$dx_date = NULL
X1 = MD[order(MD$patient_id),]
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
View(MD)
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Model_Past_Outcome = MD [ MD$model_date > MD$outcome_date ,]
MD_real = MD [ MD$model_date < MD$outcome_date ,]
message(normalizePath("~"))
rm(list = ls())
library(fst)
library(dplyr)
library(stringr)
library(plyr)
library(data.table)
#library(RJSONIO)
library(rjson)
library("Metrics")
setwd('G:/FillmoreCancerData/markhe/VTERisk/Notebooks/PostRun_Analysis/Output')
MD = read.csv('yMulti1.csv')
MD$dx_date = NULL
X1 = MD[order(MD$patient_id),]
modd_from_index = (as.Date(MD$model_date) - as.Date(MD$index_date)) %>% as.numeric()
d_from_outcome = (as.Date(MD$outcome_date) - as.Date(MD$model_date)) %>% as.numeric()
MD$d_to_outcome = d_from_outcome
MD$d_from_ind = modd_from_index
Model_Past_Outcome = MD [ MD$model_date > MD$outcome_date ,]
MD_real = MD [ MD$model_date < MD$outcome_date ,]
View(MD_real)
p = MD_real$p6 / max( MD_real$p6])
p = MD_real$p6 / max( MD_real$p6)
auc(MD_real$y , MD_real$p)
auc(MD_real$y ,  p)
p
MD_real$y
MD$y = 1*(MD$outcome=="True")
p = MD_real$p6 / max( MD_real$p6)
y = 1*(MD$outcome=="True")
auc( y ,  p)
y = 1*(MD_real$outcome=="True")
p = MD_real$p6 / max( MD_real$p6)
auc( y ,  p)
View(MD_real)
D_1 = MD[ MD$outcome == "True", ]
D_0 = MD[ MD$outcome == "False", ]
View(D_1)
